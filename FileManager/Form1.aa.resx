<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="iconList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC4
        CgAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFIAA/sB/gPuAf8D7gn/A+4B/wPuCf8D7gH/A+4J/wPuAf8D7gX/kAADDAQQ
        ARUDEAEVAxABFQMQARYDEQEXAwcBCRQAA+oB/gj/A+4B/wPuCf8D7gH/A+4J/wPuAf8D7gn/A+4B/4wA
        AUUBQwFAAXABywGVAUsB/wHLAZUBSwH/AcsBlQFLAf8BywGVAUsB/wHIAZIBSQH/AcMBjQFFAf8BhwFu
        AU0B0wMPARQQAAPqAf4BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf+MAAFjAVsBUAGfAcsBlQFLAf8BywGVAUsB/wHLAZUBSwH/AcsBlQFLAf8BywGV
        AUsB/wHIAZIBSQH/AbMBfQE5Af8BfwFpAUsBzgMNAREMAAP7Af4BpAG6AQYB/wGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf+MAAFjAVsBUAGfAcsBlQFLAf8BywGV
        AUsB/wHLAZUBSwH/AcsBlQFLAf8BywGVAUsB/wHLAZUBSwH/AcUBjwFGAf8BwgGNAUQB/wFbAVYBTQGW
        DAAD+wH+AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/jAABYwFbAVABnwHLAZUBSwH/AcsBlQFLAf8BywGVAUsB/wHLAZUBSwH/AcsBlQFLAf8BywGV
        AUsB/wHLAZUBSwH/AcsBlQFLAf8BYwFbAVABnwwAA+oB/gGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/4wAAWMBWwFQAZ8BdwFoAVQBuQMaASUDGgEl
        AxoBJQMaASUBXgFXAU4BmAHLAZUBSwH/AcsBlQFLAf8BYwFbAVABnwwAA+oB/gGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/4wAAWMBWwFQAZ8BtgGL
        AVIB8QGQAXgBVgHSAZABeAFWAdIBkAF4AVYB0gGQAXgBVgHSAZABeAFWAdIBkAF4AVYB0gG2AYsBUgHx
        AWMBWwFQAZ8MAAP7Af4BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf+MAAFjAVsBUAGfAYQBcAFTAccBNAIzAVEBNAIzAVEBNAIzAVEBNAIzAVEBNAIz
        AVEBNAIzAVEBhAFwAVMBxwFjAVsBUAGfDAAD+wH+AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/jAABYwFbAVABnwGjAYABUwHiAWkBXwFRAaYBaQFf
        AVEBpgFpAV8BUQGmAWkBXwFRAaYBaQFfAVEBpgFpAV8BUQGmAaMBgAFTAeIBYwFbAVABnwwAA+oB/gGk
        AboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/4wA
        AWMBWwFQAZ8BlQF6AVUB1gFNAUoBRgF+AU0BSgFGAX4BTQFKAUYBfgFNAUoBRgF+AU0BSgFGAX4BTQFK
        AUYBfgGVAXoBVQHWAWMBWwFQAZ8MAAPqAf4BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGkAboBBgH/AaQBugEG
        Af8BpAG6AQYB/wGkAboBBgH/AaQBugEGAf+MAAFjAVsBUAGfAZABdwFVAdMBSgFHAUMBeAFKAUcBQwF4
        AUoBRwFDAXgBSgFHAUMBeAFKAUcBQwF4AUoBRwFDAXgBkAF3AVUB0wFjAVsBUAGfDAAD+wH+AaoBsQF6
        Af8D7gH/A+4B/wPuAf8D7gH/A+4B/wPuAf8D7gH/A+4B/wGkAboBBgH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf8BpAG6AQYB/4wAAWMBWwFQAZ8BpAGBAVMB5AFsAWIBUgGrAWwBYgFSAasBbAFi
        AVIBqwFsAWIBUgGrAWwBYgFSAasBbAFiAVIBqwGkAYEBUwHkAWMBWwFQAZ8MAAP7Af4BZQFzAQkB/wFl
        AXMBCQH/AWUBcwEJAf8BZQFzAQkB/wFlAXMBCQH/A+4J/wPuAf8D7gH/AaQBugEGAf8BpAG6AQYB/wGk
        AboBBgH/AaQBugEGAf8BpAG6AQYB/4wAAUIBQAE+AWsBxwGRAU0B/gHLAZUBSwH/AcsBlQFLAf8BywGV
        AUsB/wHLAZUBSwH/AcsBlQFLAf8BywGVAUsB/wHHAZEBTQH+AUIBQAE+AWsMAAPqAf4I/wPuAf8D7gn/
        A+4B/wPuCf8D7gH/A+4J/wPuAf+QAAMGBAgBCwMIAQsDCAELAwgBCwMIAQsDCAELAwYBCBAAA+oB/gj/
        A+4B/wPuCf8D7gH/A+4J/wPuAf8D7gn/A+4B/8AAA/kB/QPqAf4D6gH+A/sB/gP7Af4D6gH+A+oB/gP7
        Af4D+wH+A+oB/gPqAf4D+wH+A/sB/gPqAf4D6gH+A/sB/oAAAUIBTQE+BwABPgMAASgDAAFAAwABEAMA
        AQEBAAEBBQABgBcAA/8BAAL/BgAB8AEfBgAB4AEPBgAB4AEHBgAB4AEHBgAB4AEHBgAB4AEHBgAB4AEH
        BgAB4AEHBgAB4AEHBgAB4AEHBgAB4AEHBgAB4AEHBgAB4AEHBgAB8AEPBgAC/wYACw==
</value>
  </data>
</root>